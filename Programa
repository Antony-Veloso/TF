import java.util.Random;
import java.util.Scanner;
public class TF
{
    public static void MostraMatriz(char[][] M, int linhas, int colunas)
    {
        for(int L=0; L<linhas; L++)
        {
            for(int C=0; C<colunas; C++)
            {
                System.out.printf(" %c ", M[L][C]);
            }
            System.out.printf("\n");
        }
    }
    
    public static double Modulo(int valor)
    {
        return Math.sqrt(valor * valor);
    }
    
        public static boolean pontoRepetido(int[][] coord, int quantidade, int x, int y) {
        for (int i = 0; i < quantidade; i++) {
            if (coord[i][0] == x && coord[i][1] == y) {
                return true;
            }
        }
        return false;
    }

    public static int[] sorteiaPontoUnico(int colunas, int linhas, int[][] coord, int quantidade) {
        Random rd = new Random();
        int x,y;

        do {
            x = rd.nextInt(colunas);
            y = rd.nextInt(linhas);
        } while (pontoRepetido(coord, quantidade, x, y));
        int[] a={x,y};
        return a;
    }
    
        public static void Caminho(char[][] M, int POx, int POy, int PDx, int PDy, char simbolo) {
        double DistY = Modulo(POy - PDy);
        double DistX = Modulo(POx - PDx);
        double Dist = DistX + DistY;
        double DeslY = DistY / Dist; 
        double DeslX = DistX / Dist;  
        
        double PosY = POy; 
        double PosX = POx;

        for(int avanco=0; avanco<Dist; avanco++)
        {
            // informacoes para depuracao
            //System.out.printf("DeslY: %f ::: DeslX: %f\nPosY: %f ::: PosX: %f\n\n", DeslY, DeslX, PosY, PosX);
            if(M[(int)PosY][(int)PosX]=='.'){M[(int)PosY][(int)PosX] = simbolo;}
            else if((M[(int)PosY][(int)PosX]!='.')&&(M[(int)PosY][(int)PosX]!=simbolo)){M[(int)PosY][(int)PosX] = '#';}
            if(PDy > POy) 
            {
                PosY += DeslY;    
            } else if(PDy < POy) 
            {
                PosY -= DeslY;    
            }

            if(PDx > POx) 
            {
                PosX += DeslX;    
            } else if(PDx < POx) 
            {
                PosX -= DeslX;    
            }            

        }
        M[PDy][PDx] = simbolo;
    }
    
    public static void main(String[] args)
    {
        Scanner sc = new Scanner(System.in);
        int Linhas, Colunas;
        do {
            System.out.print("Informe a quantidade de linhas (>= 3): ");
            Linhas = sc.nextInt();
        } while (Linhas < 3);

        do {
            System.out.print("Informe a quantidade de colunas (>= 3): ");
            Colunas = sc.nextInt();
        } while (Colunas < 3);
        
        char[][] M = new char[Linhas][Colunas];
        
        for(int L=0; L<Linhas; L++)
        {
            for(int C=0; C<Colunas; C++)
            {
                M[L][C] = '.';
            }
        }

        char[] letras = {'A', 'B', 'C', 'D'};
        int[][] coordenadas = new int[4][2];

        for (int i = 0; i < 4; i++) {
            int[] p = sorteiaPontoUnico(Colunas, Linhas, coordenadas, i);
            coordenadas[i][0] = p[0]; // x
            coordenadas[i][1] = p[1]; // y
        }

        for (int i = 0; i < 4; i++) {
            System.out.printf("::: Ponto %c: L=%d, C=%d\n", letras[i], coordenadas[i][1], coordenadas[i][0]);
        }

        System.out.println("::: >>> Nenhum ponto com coordenadas repetidas! <<<");

        Caminho(M, coordenadas[0][0], coordenadas[0][1], coordenadas[1][0], coordenadas[1][1], '+');
        Caminho(M, coordenadas[2][0], coordenadas[2][1], coordenadas[3][0], coordenadas[3][1], '*');

        for (int i = 0; i < 4; i++) {
            M[coordenadas[i][1]][coordenadas[i][0]] = letras[i];
        }
        
        MostraMatriz(M, Linhas, Colunas);
        
    }    
}
